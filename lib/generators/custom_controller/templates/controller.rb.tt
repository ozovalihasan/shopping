class <%= class_name %>sController < ApplicationController
  before_action :set_<%= singular_name %>, only: %i[ show edit update destroy ]

  # GET /<%= plural_name %> or /<%= plural_name %>.json
  def index
    @<%= plural_name %> = <%= class_name %>.all
    respond_to do |format|
      format.html { render <%= class_name %>s::IndexComponent.new(<%= plural_name %>: @<%= plural_name %>) }
      format.json
    end
  end

  # GET /<%= plural_name %>/1 or /<%= plural_name %>/1.json
  def show
    respond_to do |format|
      format.html { render <%= class_name %>s::ShowComponent.new(<%= singular_name %>: @<%= singular_name %>) }
      format.json 
    end
  end

  # GET /<%= plural_name %>/new
  def new
    @<%= singular_name %> = <%= class_name %>.new
    <% reference_attributes.keys.map do |key|  %>
    @<%= key.to_s.pluralize %> = <%= key.to_s.capitalize %>.all
    <% end %>
    render <%= class_name %>s::NewComponent.new(<%= [singular_name, *reference_attributes.keys.map(&:pluralize)].map{|item| "#{item}: @#{item}"}.join(", ") %>)
  end

  # GET /<%= plural_name %>/1/edit
  def edit
    <% reference_attributes.keys.map do |key|  %>
    @<%= key.to_s.pluralize %> = <%= key.to_s.capitalize %>.all
    <% end %>
    render <%= class_name %>s::EditComponent.new(<%= [singular_name, *reference_attributes.keys.map(&:pluralize)].map{|item| "#{item}: @#{item}"}.join(", ") %>)
  end

  # POST /<%= plural_name %> or /<%= plural_name %>.json
  def create
    @<%= singular_name %> = <%= class_name %>.new(<%= singular_name %>_params)

    respond_to do |format|
      if @<%= singular_name %>.save
        format.html { redirect_to <%= singular_name %>_url(@<%= singular_name %>), notice: "<%= class_name %> was successfully created." }
        format.json { render :show, status: :created, location: @<%= singular_name %> }
      else
        format.html { render :new, status: :unprocessable_entity }
        format.json { render json: @<%= singular_name %>.errors, status: :unprocessable_entity }
      end
    end
  end

  # PATCH/PUT /<%= plural_name %>/1 or /<%= plural_name %>/1.json
  def update
    respond_to do |format|
      if @<%= singular_name %>.update(<%= singular_name %>_params)
        format.html { redirect_to <%= singular_name %>_url(@<%= singular_name %>), notice: "<%= class_name %> was successfully updated." }
        format.json { render :show, status: :ok, location: @<%= singular_name %> }
      else
        format.html { render :edit, status: :unprocessable_entity }
        format.json { render json: @<%= singular_name %>.errors, status: :unprocessable_entity }
      end
    end
  end

  # DELETE /<%= plural_name %>/1 or /<%= plural_name %>/1.json
  def destroy
    @<%= singular_name %>.destroy

    respond_to do |format|
      format.html { redirect_to <%= plural_name %>_url, notice: "<%= class_name %> was successfully destroyed." }
      format.json { head :no_content }
    end
  end

  private
    # Use callbacks to share common setup or constraints between actions.
    def set_<%= singular_name %>
      @<%= singular_name %> = <%= class_name %>.find(params[:id])
    end

    # Only allow a list of trusted parameters through.
    def <%= singular_name %>_params
      params.require(:<%= singular_name %>).permit(<%= (options.attributes.map {|key, val| val == "references" ? (key.to_s + "_id").to_sym : key.to_sym }).to_s.delete("[]") %>)
    end
end